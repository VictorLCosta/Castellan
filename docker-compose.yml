services:
  auctionsdb:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: auctionsdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data     
  
  searchdb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "15672:15672"  # RabbitMQ management UI
      - "5672:5672"    # RabbitMQ messaging
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
  
  auctionsapi:
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__HostName=rabbitmq
      - ConnectionStrings__DefaultConnection=Host=auctionsdb;Database=auctionsdb;Username=postgres;Password=postgrespw
      - IdentityServiceUrl=http://identitysvc-api
    ports:
      - "7001:80"
    depends_on:
      - auctionsdb
      - rabbitmq

  searchapi:
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__HostName=rabbitmq
      - ConnectionStrings__MongoDb=mongodb://root:rootpw@localhost
    ports:
      - "7002:80"
    depends_on:
      - searchdb
      - rabbitmq

volumes:
  pgdata:
    driver: local
  mongodata: